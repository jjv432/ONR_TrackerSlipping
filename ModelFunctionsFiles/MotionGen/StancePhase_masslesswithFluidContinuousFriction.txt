% Torque and Force actuated slip
% Foot is at position x along nx>
% Hip and Foot are particles
% Leg is massless and has compliance
% Friction force is specified 
% (3 DOF system: l, qB, x)
%------------------------------------------------------------
NewtonianFrame N              % Earth.
Particle       H	      % Hip
RigidFrame     B              % Leg (massless)
Particle       Q              % Foot
Point          Bc(B)          % center point of leg

H.SetMass( mH = 9.4 kg )      % Half of the weigth of the robot
Q.SetMass( mQ = 0.2 kg )      % Foot mass

Constant  g = 9.8 m/s^2       % Earth's gravitational acceleration.
Variable l''                  % leg length (hip to foot)
Specified ldes                % desired leg length
Specified Tau                 % torque on leg from the world
Variable qB''                 % Angle of leg bx> with respect to nx> with +nz> direction
Variable x''                  % foot position
Constant k = 13592 N/m        % Leg linear spring stifness

Variable   Fn                 % Resultant normal force on foot.
Variable   Ff                 % Resultant friction force on foot; becomes specified force by continuous friction
Constant  muK = 0.4 noUnits   % Coefficient of kinetic friction.
Constant  epsilonV = 1.0E-5 m/s  % Represents a small sliding speed.


%----- Rotational and translational kinematic --------------------
B.RotateZ(N, qB)

Q.Translate( No,  x*nx> )	% Foot position from No
H.Translate ( Q, l*bx> )	% Hip position
Bc.Translate (Q, 0.5*l*bx>)	% Center of the leg

% ----- Compute position of interest -----------------

express(H.GetPosition(No),N)           % position of the hip


% ----- Compute velocities of interest for drag calculations ------

express(Q.GetVelocity(N),N)  	   % velocity of the foot 
express(Bc.GetVelocity(N),N)	   % velocity of the center of the leg
express(H.GetVelocity(N),N)           % velocity of the hip


% Add relevant contact and distance forces
System.AddForceGravity( -g*Ny> )
stretch = l - ldes
 

% Fluid Forces
Specified Fdl_x              	% drag force on leg along nx> direction
Specified Fdl_y              	% drag force on leg along ny> direction
Specified Fdh_x              	% drag force on hip in nx> direction
Specified Fdh_y              	% drag force on hip in ny> direction

Specified Fbh_y              	% Buoyant force on hip
Specified T_w                	% drag moment from water on leg

Fdh> = Fdh_x*nx> + Fdh_y*ny>

H.AddForce(Q, -k*stretch*bx>)  	% Spring force from foot on hip
H.AddForce(Fdh> + Fbh_y*ny>)  	% Drag and buoyant forces on the Hip
 
B.AddTorque( N, Tau*Nz> )      	% Torque excerted by the world on the leg
B.AddTorque( N, T_w*Nz> )      	% Moment excerted by the water on the leg. 
BC.AddForce(Fdl_x*Nx> + Fdl_y*Ny>)  % Drag force on the leg

magVelocity = Q.GetSpeed( N )
magVelocityPlusEpsilon = magVelocity + epsilonV
Ff = Dot( -muK*Fn*Q.GetVelocity(N) / magVelocityPlusEpsilon, Nx> )

Q.AddForce(Fn*ny> + Ff*nx>)     % Resultant normal and friction forces on foot

%   Equations of motion
Dynamics[1] = Dot( nx>,  System(H,B,Q).GetDynamics() )    % x, (Ff is specified)
Dynamics[2] = Dot( ny>,  System(H,B,Q).GetDynamics() )    % Fn
Dynamics[3] = Dot( bx>,  System(H,B).GetDynamics() )      % l''
Dynamics[4] = Dot( nz>,  System(H,B).GetDynamics(Q) )     % qB''


%   Solve dynamics equation for l'' qB'', x'', Fn 
Solve( Dynamics = 0,   l'', qB'', x'', Fn)

% Force of friction is specified
Ff = Dot( -muK*Fn*Q.GetVelocity(N) / (Q.GetSpeed(N) + epsilonV), Nx> )

% Velocities for drag calculations

express(Bc.GetVelocity(N),N)   % velocity of center point of the leg
express(H.GetVelocity(N),N)    % velocity of the hip



%-----------------------------------------------------------------------------

